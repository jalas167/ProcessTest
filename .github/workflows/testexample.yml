name: Run whitelist check action
run-name: Test run by ${{ github.actor }}.
on:
  workflow_dispatch:
    inputs:
      provider_version:
        description: "Provider version (e.g., v0.13.2 or pre-rel-v0.13.1)"
        required: false
        default: "v0.13.2"
      requestor_version:
        description: "Requestor version (e.g., v0.13.2 or pre-rel-v0.13.1)"
        required: false
        default: "v0.13.2"
      provider_wasi_version:
        description: "Provider WASI version (e.g., v0.2.2)"
        required: false
        default: "v0.2.2"
      provider_vm_version:
        description: "Provider VM version (e.g., v0.3.0)"
        required: false
        default: "v0.3.0"

env:
  PROVIDER_VERSION: ${{ github.event.inputs.provider_version || 'v0.13.2' }}
  REQUESTOR_VERSION: ${{ github.event.inputs.requestor_version || 'v0.13.2' }}
  PROVIDER_WASI_VERSION: ${{ github.event.inputs.provider_wasi_version || 'v0.2.2' }}
  PROVIDER_VM_VERSION: ${{ github.event.inputs.provider_vm_version || 'v0.3.0' }}

jobs:
  Run_whitelist_DNS_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."

  run-examples-tests:
    name: Run Examples tests
    runs-on: ubuntu-latest
    # runs-on: goth2
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: list folder
        run: ls /home/runner/work/

      - name: Prepare providers and requestor
        uses: ./.github/actions/prepare_env

      - name: Run the Examples tests
        run: docker exec -t docker-requestor-1 /bin/sh -c "cd /golem-js && npm run test:examples -- --exitOnError"

      - name: Cleanup test environment
        uses: ./.github/actions/clean_env
        with:
          type: "examples"
